{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/serban/Desktop/bytes/src/context/bytes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { listBytes } from \"../api/queries\";\nimport { processOrder } from \"../api/mutations\";\nconst ByteContext = /*#__PURE__*/React.createContext();\n\nconst ByteProvider = ({\n  children\n}) => {\n  _s();\n\n  const [bytes, setBytes] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchBytes();\n  }, []);\n\n  const checkout = async orderDetails => {\n    const payload = {\n      id: uuidv4(),\n      ...orderDetails\n    };\n\n    try {\n      await API.graphql(graphqlOperation(processOrder, {\n        input: payload\n      }));\n      console.log(\"Order is successful\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchBytes = async () => {\n    try {\n      setLoading(true); // Switch authMode to API_KEY for public access\n\n      const {\n        data\n      } = await API.graphql({\n        query: listBytes,\n        authMode: \"API_KEY\"\n      });\n      const bytes = data.listBytes.items;\n      const featured = bytes.filter(byte => {\n        return !!byte.featured;\n      });\n      setBytes(bytes);\n      setFeatured(featured);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ByteContext.Provider, {\n    value: {\n      bytes,\n      featured,\n      loading,\n      checkout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ByteProvider, \"GD2wyPlr+aeLllG6pJ8w5iwjlvc=\");\n\n_c = ByteProvider;\nexport { ByteContext, ByteProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ByteProvider\");","map":{"version":3,"sources":["/home/serban/Desktop/bytes/src/context/bytes.js"],"names":["React","useEffect","useState","API","graphqlOperation","v4","uuidv4","listBytes","processOrder","ByteContext","createContext","ByteProvider","children","bytes","setBytes","featured","setFeatured","loading","setLoading","fetchBytes","checkout","orderDetails","payload","id","graphql","input","console","log","err","data","query","authMode","items","filter","byte"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAN,EAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAG,MAAOC,YAAP,IAAwB;AACvC,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEjB,MAAM,EADI;AAEd,SAAGe;AAFW,KAAhB;;AAIA,QAAI;AACF,YAAMlB,GAAG,CAACqB,OAAJ,CAAYpB,gBAAgB,CAACI,YAAD,EAAe;AAAEiB,QAAAA,KAAK,EAAEH;AAAT,OAAf,CAA5B,CAAN;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GAXD;;AAaA,QAAMT,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFD,MAAAA,UAAU,CAAC,IAAD,CAAV,CADE,CAEF;;AACA,YAAM;AAAEW,QAAAA;AAAF,UAAW,MAAM1B,GAAG,CAACqB,OAAJ,CAAY;AACjCM,QAAAA,KAAK,EAAEvB,SAD0B;AAEjCwB,QAAAA,QAAQ,EAAE;AAFuB,OAAZ,CAAvB;AAIA,YAAMlB,KAAK,GAAGgB,IAAI,CAACtB,SAAL,CAAeyB,KAA7B;AACA,YAAMjB,QAAQ,GAAGF,KAAK,CAACoB,MAAN,CAAcC,IAAD,IAAU;AACtC,eAAO,CAAC,CAACA,IAAI,CAACnB,QAAd;AACD,OAFgB,CAAjB;AAGAD,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdD,CAcE,OAAOU,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GAlBD;;AAoBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBE,MAAAA,OAAnB;AAA4BG,MAAAA;AAA5B,KAA7B;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/CD;;GAAMD,Y;;KAAAA,Y;AAiDN,SAASF,WAAT,EAAsBE,YAAtB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { listBytes } from \"../api/queries\";\nimport { processOrder } from \"../api/mutations\";\n\nconst ByteContext = React.createContext();\n\nconst ByteProvider = ({ children }) => {\n  const [bytes, setBytes] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchBytes();\n  }, []);\n\n  const checkout = async (orderDetails) => {\n    const payload = {\n      id: uuidv4(),\n      ...orderDetails\n    };\n    try {\n      await API.graphql(graphqlOperation(processOrder, { input: payload }));\n      console.log(\"Order is successful\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchBytes = async () => {\n    try {\n      setLoading(true);\n      // Switch authMode to API_KEY for public access\n      const { data } = await API.graphql({\n        query: listBytes,\n        authMode: \"API_KEY\"\n      });\n      const bytes = data.listBytes.items;\n      const featured = bytes.filter((byte) => {\n        return !!byte.featured;\n      });\n      setBytes(bytes);\n      setFeatured(featured);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <ByteContext.Provider value={{ bytes, featured, loading, checkout }}>\n      {children}\n    </ByteContext.Provider>\n  );\n};\n\nexport { ByteContext, ByteProvider };\n"]},"metadata":{},"sourceType":"module"}