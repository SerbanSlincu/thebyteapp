{"ast":null,"code":"/* eslint-disable */ // this is an auto generated file. This will be overwritten\nexport var processOrder=/* GraphQL */\"\\n  mutation ProcessOrder($input: ProcessOrderInput!) {\\n    processOrder(input: $input)\\n  }\\n\";export var createByte=/* GraphQL */\"\\n  mutation CreateByte(\\n    $input: CreateByteInput!\\n    $condition: ModelByteConditionInput\\n  ) {\\n    createByte(input: $input, condition: $condition) {\\n      id\\n      index\\n      size\\n      content\\n      owner\\n      price\\n      orders {\\n        items {\\n          id\\n          byte_id\\n          order_id\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";export var updateByte=/* GraphQL */\"\\n  mutation UpdateByte(\\n    $input: UpdateByteInput!\\n    $condition: ModelByteConditionInput\\n  ) {\\n    updateByte(input: $input, condition: $condition) {\\n      id\\n      index\\n      size\\n      content\\n      owner\\n      price\\n      orders {\\n        items {\\n          id\\n          byte_id\\n          order_id\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";export var deleteByte=/* GraphQL */\"\\n  mutation DeleteByte(\\n    $input: DeleteByteInput!\\n    $condition: ModelByteConditionInput\\n  ) {\\n    deleteByte(input: $input, condition: $condition) {\\n      id\\n      index\\n      size\\n      content\\n      owner\\n      price\\n      orders {\\n        items {\\n          id\\n          byte_id\\n          order_id\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";export var createByteOrder=/* GraphQL */\"\\n  mutation CreateByteOrder(\\n    $input: CreateByteOrderInput!\\n    $condition: ModelByteOrderConditionInput\\n  ) {\\n    createByteOrder(input: $input, condition: $condition) {\\n      id\\n      byte_id\\n      order_id\\n      order {\\n        id\\n        user\\n        date\\n        total\\n        bytes {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n      byte {\\n        id\\n        index\\n        size\\n        content\\n        owner\\n        price\\n        orders {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n    }\\n  }\\n\";export var updateByteOrder=/* GraphQL */\"\\n  mutation UpdateByteOrder(\\n    $input: UpdateByteOrderInput!\\n    $condition: ModelByteOrderConditionInput\\n  ) {\\n    updateByteOrder(input: $input, condition: $condition) {\\n      id\\n      byte_id\\n      order_id\\n      order {\\n        id\\n        user\\n        date\\n        total\\n        bytes {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n      byte {\\n        id\\n        index\\n        size\\n        content\\n        owner\\n        price\\n        orders {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n    }\\n  }\\n\";export var deleteByteOrder=/* GraphQL */\"\\n  mutation DeleteByteOrder(\\n    $input: DeleteByteOrderInput!\\n    $condition: ModelByteOrderConditionInput\\n  ) {\\n    deleteByteOrder(input: $input, condition: $condition) {\\n      id\\n      byte_id\\n      order_id\\n      order {\\n        id\\n        user\\n        date\\n        total\\n        bytes {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n      byte {\\n        id\\n        index\\n        size\\n        content\\n        owner\\n        price\\n        orders {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n    }\\n  }\\n\";export var createOrder=/* GraphQL */\"\\n  mutation CreateOrder(\\n    $input: CreateOrderInput!\\n    $condition: ModelOrderConditionInput\\n  ) {\\n    createOrder(input: $input, condition: $condition) {\\n      id\\n      user\\n      date\\n      total\\n      bytes {\\n        items {\\n          id\\n          byte_id\\n          order_id\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";export var updateOrder=/* GraphQL */\"\\n  mutation UpdateOrder(\\n    $input: UpdateOrderInput!\\n    $condition: ModelOrderConditionInput\\n  ) {\\n    updateOrder(input: $input, condition: $condition) {\\n      id\\n      user\\n      date\\n      total\\n      bytes {\\n        items {\\n          id\\n          byte_id\\n          order_id\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";export var deleteOrder=/* GraphQL */\"\\n  mutation DeleteOrder(\\n    $input: DeleteOrderInput!\\n    $condition: ModelOrderConditionInput\\n  ) {\\n    deleteOrder(input: $input, condition: $condition) {\\n      id\\n      user\\n      date\\n      total\\n      bytes {\\n        items {\\n          id\\n          byte_id\\n          order_id\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";","map":{"version":3,"sources":["/home/serban/Desktop/bytes/src/api/mutations.js"],"names":["processOrder","createByte","updateByte","deleteByte","createByteOrder","updateByteOrder","deleteByteOrder","createOrder","updateOrder","deleteOrder"],"mappings":"AAAA,oB,CACA;AAEA,MAAO,IAAMA,CAAAA,YAAY,CAAG,aAAH,iGAAlB,CAKP,MAAO,IAAMC,CAAAA,UAAU,CAAG,aAAH,mcAAhB,CA2BP,MAAO,IAAMC,CAAAA,UAAU,CAAG,aAAH,mcAAhB,CA2BP,MAAO,IAAMC,CAAAA,UAAU,CAAG,aAAH,mcAAhB,CA2BP,MAAO,IAAMC,CAAAA,eAAe,CAAG,aAAH,0nBAArB,CAsCP,MAAO,IAAMC,CAAAA,eAAe,CAAG,aAAH,0nBAArB,CAsCP,MAAO,IAAMC,CAAAA,eAAe,CAAG,aAAH,0nBAArB,CAsCP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAAH,yaAAjB,CAyBP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAAH,yaAAjB,CAyBP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAAH,yaAAjB","sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const processOrder = /* GraphQL */ `\n  mutation ProcessOrder($input: ProcessOrderInput!) {\n    processOrder(input: $input)\n  }\n`;\nexport const createByte = /* GraphQL */ `\n  mutation CreateByte(\n    $input: CreateByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    createByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      owner\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateByte = /* GraphQL */ `\n  mutation UpdateByte(\n    $input: UpdateByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    updateByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      owner\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteByte = /* GraphQL */ `\n  mutation DeleteByte(\n    $input: DeleteByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    deleteByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      owner\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createByteOrder = /* GraphQL */ `\n  mutation CreateByteOrder(\n    $input: CreateByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    createByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        owner\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const updateByteOrder = /* GraphQL */ `\n  mutation UpdateByteOrder(\n    $input: UpdateByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    updateByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        owner\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const deleteByteOrder = /* GraphQL */ `\n  mutation DeleteByteOrder(\n    $input: DeleteByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    deleteByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        owner\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const createOrder = /* GraphQL */ `\n  mutation CreateOrder(\n    $input: CreateOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    createOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateOrder = /* GraphQL */ `\n  mutation UpdateOrder(\n    $input: UpdateOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    updateOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteOrder = /* GraphQL */ `\n  mutation DeleteOrder(\n    $input: DeleteOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    deleteOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}