{"ast":null,"code":"import _toConsumableArray from\"/home/serban/Desktop/bytes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/serban/Desktop/bytes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{API,graphqlOperation}from\"aws-amplify\";import{updateByte}from'../api/mutations';var CartContext=/*#__PURE__*/React.createContext();var CartProvider=function CartProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cart=_useState2[0],setCart=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),total=_useState4[0],setTotal=_useState4[1];useEffect(function(){var total=_toConsumableArray(cart).reduce(function(total,_ref2){var price=_ref2.price;return total+=price;},0);setTotal(parseFloat(total.toFixed(2)));},[cart]);var addToCart=function addToCart(byte){var id=byte.id,index=byte.index,price=byte.price;var cartItems=[].concat(_toConsumableArray(cart),[{id:id,index:index,price:price}]);setCart(cartItems);};var removeFromCart=function removeFromCart(id){var updatedCart=_toConsumableArray(cart).filter(function(item){return item.id!==id;});setCart(updatedCart);};var clearCart=function clearCart(){setCart([]);};var transferCartToOwner=function transferCartToOwner(customer){cart.forEach(function(item){try{API.graphql(graphqlOperation(updateByte,{input:{id:item.id,index:item.index,content:\"0\",owner:customer}}));console.log(\"transfer is successful\");}catch(err){console.log(err);}});};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cart:cart,total:total,addToCart:addToCart,removeFromCart:removeFromCart,clearCart:clearCart,transferCartToOwner:transferCartToOwner},children:children});};export{CartProvider,CartContext};","map":{"version":3,"sources":["/home/serban/Desktop/bytes/src/context/cart.js"],"names":["React","useState","useEffect","API","graphqlOperation","updateByte","CartContext","createContext","CartProvider","children","cart","setCart","total","setTotal","reduce","price","parseFloat","toFixed","addToCart","byte","id","index","cartItems","removeFromCart","updatedCart","filter","item","clearCart","transferCartToOwner","customer","forEach","graphql","input","content","owner","console","log","err"],"mappings":"qVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,GAAT,CAAcC,gBAAd,KAAsC,aAAtC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,WAAW,cAAGN,KAAK,CAACO,aAAN,EAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACbR,QAAQ,CAAC,EAAD,CADK,wCAC9BS,IAD8B,eACxBC,OADwB,8BAEXV,QAAQ,CAAC,CAAD,CAFG,yCAE9BW,KAF8B,eAEvBC,QAFuB,eAIrCX,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,KAAK,CAAG,mBAAIF,IAAJ,EAAUI,MAAV,CAAiB,SAACF,KAAD,OAAsB,IAAZG,CAAAA,KAAY,OAAZA,KAAY,CACnD,MAAQH,CAAAA,KAAK,EAAIG,KAAjB,CACD,CAFa,CAEX,CAFW,CAAd,CAGAF,QAAQ,CAACG,UAAU,CAACJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAAD,CAAX,CAAR,CACD,CALQ,CAKN,CAACP,IAAD,CALM,CAAT,CAOA,GAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,IAClBC,CAAAA,EADkB,CACGD,IADH,CAClBC,EADkB,CACdC,KADc,CACGF,IADH,CACdE,KADc,CACPN,KADO,CACGI,IADH,CACPJ,KADO,CAE1B,GAAMO,CAAAA,SAAS,8BAAOZ,IAAP,GAAa,CAAEU,EAAE,CAAFA,EAAF,CAAMC,KAAK,CAALA,KAAN,CAAaN,KAAK,CAALA,KAAb,CAAb,EAAf,CACAJ,OAAO,CAACW,SAAD,CAAP,CACD,CAJD,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,EAAD,CAAQ,CAC7B,GAAII,CAAAA,WAAW,CAAG,mBAAId,IAAJ,EAAUe,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACN,EAAL,GAAYA,EAAtB,EAAjB,CAAlB,CACAT,OAAO,CAACa,WAAD,CAAP,CACD,CAHD,CAKA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBhB,OAAO,CAAC,EAAD,CAAP,CACD,CAFD,CAIA,GAAMiB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,QAAD,CAAc,CACxCnB,IAAI,CAACoB,OAAL,CAAa,SAACJ,IAAD,CAAU,CACrB,GAAI,CACFvB,GAAG,CAAC4B,OAAJ,CAAY3B,gBAAgB,CAACC,UAAD,CAAa,CAAE2B,KAAK,CAAE,CAACZ,EAAE,CAAEM,IAAI,CAACN,EAAV,CAAcC,KAAK,CAAEK,IAAI,CAACL,KAA1B,CAAiCY,OAAO,CAAE,GAA1C,CAA+CC,KAAK,CAAEL,QAAtD,CAAT,CAAb,CAA5B,EACAM,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACD,CAAC,MAAOC,GAAP,CAAY,CACZF,OAAO,CAACC,GAAR,CAAYC,GAAZ,EACD,CACF,CAPD,EAQD,CATD,CAWA,mBACE,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CAAE3B,IAAI,CAAJA,IAAF,CAAQE,KAAK,CAALA,KAAR,CAAeM,SAAS,CAATA,SAAf,CAA0BK,cAAc,CAAdA,cAA1B,CAA0CI,SAAS,CAATA,SAA1C,CAAqDC,mBAAmB,CAAnBA,mBAArD,CADT,UAGGnB,QAHH,EADF,CAOD,CA5CD,CA8CA,OAASD,YAAT,CAAuBF,WAAvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { updateByte } from '../api/mutations';\n\nconst CartContext = React.createContext();\n\nconst CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const total = [...cart].reduce((total, { price }) => {\n      return (total += price);\n    }, 0);\n    setTotal(parseFloat(total.toFixed(2)));\n  }, [cart]);\n\n  const addToCart = (byte) => {\n    const { id, index, price } = byte;\n    const cartItems = [...cart, { id, index, price }];\n    setCart(cartItems);\n  };\n\n  const removeFromCart = (id) => {\n    let updatedCart = [...cart].filter((item) => item.id !== id);\n    setCart(updatedCart);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const transferCartToOwner = (customer) => {\n    cart.forEach((item) => {\n      try {\n        API.graphql(graphqlOperation(updateByte, { input: {id: item.id, index: item.index, content: \"0\", owner: customer} }));\n        console.log(\"transfer is successful\");\n      } catch (err) {\n        console.log(err);\n      }\n    })\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, total, addToCart, removeFromCart, clearCart, transferCartToOwner }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport { CartProvider, CartContext };"]},"metadata":{},"sourceType":"module"}