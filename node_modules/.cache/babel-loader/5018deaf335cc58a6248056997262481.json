{"ast":null,"code":"/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const processOrder =\n/* GraphQL */\n`\n  mutation ProcessOrder($input: ProcessOrderInput!) {\n    processOrder(input: $input)\n  }\n`;\nexport const createByte =\n/* GraphQL */\n`\n  mutation CreateByte(\n    $input: CreateByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    createByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      description\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateByte =\n/* GraphQL */\n`\n  mutation UpdateByte(\n    $input: UpdateByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    updateByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      description\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteByte =\n/* GraphQL */\n`\n  mutation DeleteByte(\n    $input: DeleteByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    deleteByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      description\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createByteOrder =\n/* GraphQL */\n`\n  mutation CreateByteOrder(\n    $input: CreateByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    createByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        description\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const updateByteOrder =\n/* GraphQL */\n`\n  mutation UpdateByteOrder(\n    $input: UpdateByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    updateByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        description\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const deleteByteOrder =\n/* GraphQL */\n`\n  mutation DeleteByteOrder(\n    $input: DeleteByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    deleteByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        description\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const createOrder =\n/* GraphQL */\n`\n  mutation CreateOrder(\n    $input: CreateOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    createOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateOrder =\n/* GraphQL */\n`\n  mutation UpdateOrder(\n    $input: UpdateOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    updateOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteOrder =\n/* GraphQL */\n`\n  mutation DeleteOrder(\n    $input: DeleteOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    deleteOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;","map":{"version":3,"sources":["/home/serban/Desktop/bytes/src/api/mutations.js"],"names":["processOrder","createByte","updateByte","deleteByte","createByteOrder","updateByteOrder","deleteByteOrder","createOrder","updateOrder","deleteOrder"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA,CAJO;AAKP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO;AA2BP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO;AA2BP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO;AA2BP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCO;AAsCP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCO;AAsCP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCO;AAsCP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AAyBP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AAyBP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO","sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const processOrder = /* GraphQL */ `\n  mutation ProcessOrder($input: ProcessOrderInput!) {\n    processOrder(input: $input)\n  }\n`;\nexport const createByte = /* GraphQL */ `\n  mutation CreateByte(\n    $input: CreateByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    createByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      description\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateByte = /* GraphQL */ `\n  mutation UpdateByte(\n    $input: UpdateByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    updateByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      description\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteByte = /* GraphQL */ `\n  mutation DeleteByte(\n    $input: DeleteByteInput!\n    $condition: ModelByteConditionInput\n  ) {\n    deleteByte(input: $input, condition: $condition) {\n      id\n      index\n      size\n      content\n      description\n      price\n      orders {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createByteOrder = /* GraphQL */ `\n  mutation CreateByteOrder(\n    $input: CreateByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    createByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        description\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const updateByteOrder = /* GraphQL */ `\n  mutation UpdateByteOrder(\n    $input: UpdateByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    updateByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        description\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const deleteByteOrder = /* GraphQL */ `\n  mutation DeleteByteOrder(\n    $input: DeleteByteOrderInput!\n    $condition: ModelByteOrderConditionInput\n  ) {\n    deleteByteOrder(input: $input, condition: $condition) {\n      id\n      byte_id\n      order_id\n      order {\n        id\n        user\n        date\n        total\n        bytes {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n      byte {\n        id\n        index\n        size\n        content\n        description\n        price\n        orders {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\nexport const createOrder = /* GraphQL */ `\n  mutation CreateOrder(\n    $input: CreateOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    createOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateOrder = /* GraphQL */ `\n  mutation UpdateOrder(\n    $input: UpdateOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    updateOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteOrder = /* GraphQL */ `\n  mutation DeleteOrder(\n    $input: DeleteOrderInput!\n    $condition: ModelOrderConditionInput\n  ) {\n    deleteOrder(input: $input, condition: $condition) {\n      id\n      user\n      date\n      total\n      bytes {\n        items {\n          id\n          byte_id\n          order_id\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}