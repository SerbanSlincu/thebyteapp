{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/serban/Desktop/bytes/src/context/cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nconst CartContext = /*#__PURE__*/React.createContext();\n\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    const total = [...cart].reduce((total, {\n      price\n    }) => {\n      return total += price;\n    }, 0);\n    setTotal(parseFloat(total.toFixed(2)));\n  }, [cart]);\n\n  const addToCart = byte => {\n    const {\n      id,\n      index,\n      owner,\n      price\n    } = byte;\n    const cartItems = [...cart, {\n      id,\n      index,\n      owner,\n      price\n    }];\n    setCart(cartItems);\n  };\n\n  const removeFromCart = id => {\n    let updatedCart = [...cart].filter(item => item.id !== id);\n    setCart(updatedCart);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const transferCartToOwner = async () => {\n    const handleSubmit = async e => {\n      e.preventDefault();\n\n      try {\n        if (!byteDetails.index || !byteDetails.size || !byteDetails.price) return;\n        await API.graphql(graphqlOperation(createByte, {\n          input: byteDetails\n        }));\n        setByteDetails({\n          index: \"\",\n          size: \"\",\n          price: \"\"\n        });\n      } catch (err) {\n        console.log('error creating todo:', err);\n      }\n    };\n\n    handleSubmit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      total,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      transferCartToOwner\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"d7rM/Gu5Boo36K50NmkeLGTjXc4=\");\n\n_c = CartProvider;\nexport { CartProvider, CartContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/serban/Desktop/bytes/src/context/cart.js"],"names":["React","useState","useEffect","CartContext","createContext","CartProvider","children","cart","setCart","total","setTotal","reduce","price","parseFloat","toFixed","addToCart","byte","id","index","owner","cartItems","removeFromCart","updatedCart","filter","item","clearCart","transferCartToOwner","handleSubmit","e","preventDefault","byteDetails","size","API","graphql","graphqlOperation","createByte","input","setByteDetails","err","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAG,CAAC,GAAGF,IAAJ,EAAUI,MAAV,CAAiB,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAsB;AACnD,aAAQH,KAAK,IAAIG,KAAjB;AACD,KAFa,EAEX,CAFW,CAAd;AAGAF,IAAAA,QAAQ,CAACG,UAAU,CAACJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAAD,CAAX,CAAR;AACD,GALQ,EAKN,CAACP,IAAD,CALM,CAAT;;AAOA,QAAMQ,SAAS,GAAIC,IAAD,IAAU;AAC1B,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,KAAb;AAAoBP,MAAAA;AAApB,QAA8BI,IAApC;AACA,UAAMI,SAAS,GAAG,CAAC,GAAGb,IAAJ,EAAU;AAAEU,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,KAAb;AAAoBP,MAAAA;AAApB,KAAV,CAAlB;AACAJ,IAAAA,OAAO,CAACY,SAAD,CAAP;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAIJ,EAAD,IAAQ;AAC7B,QAAIK,WAAW,GAAG,CAAC,GAAGf,IAAJ,EAAUgB,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAvC,CAAlB;AACAT,IAAAA,OAAO,CAACc,WAAD,CAAP;AACD,GAHD;;AAKA,QAAMG,SAAS,GAAG,MAAM;AACtBjB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIA,QAAMkB,mBAAmB,GAAG,YAAY;AACtC,UAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI;AACA,YAAI,CAACC,WAAW,CAACZ,KAAb,IAAsB,CAACY,WAAW,CAACC,IAAnC,IAA2C,CAACD,WAAW,CAAClB,KAA5D,EAAmE;AACnE,cAAMoB,GAAG,CAACC,OAAJ,CAAYC,gBAAgB,CAACC,UAAD,EAAa;AAAEC,UAAAA,KAAK,EAAEN;AAAT,SAAb,CAA5B,CAAN;AACAO,QAAAA,cAAc,CAAC;AAAEnB,UAAAA,KAAK,EAAE,EAAT;AAAaa,UAAAA,IAAI,EAAE,EAAnB;AAAuBnB,UAAAA,KAAK,EAAE;AAA9B,SAAD,CAAd;AACH,OAJD,CAIE,OAAO0B,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACH;AACJ,KATC;;AAUFX,IAAAA,YAAY;AACX,GAZD;;AAcA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEpB,MAAAA,IAAF;AAAQE,MAAAA,KAAR;AAAeM,MAAAA,SAAf;AAA0BM,MAAAA,cAA1B;AAA0CI,MAAAA,SAA1C;AAAqDC,MAAAA;AAArD,KADT;AAAA,cAGGpB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/CD;;GAAMD,Y;;KAAAA,Y;AAiDN,SAASA,YAAT,EAAuBF,WAAvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst CartContext = React.createContext();\n\nconst CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const total = [...cart].reduce((total, { price }) => {\n      return (total += price);\n    }, 0);\n    setTotal(parseFloat(total.toFixed(2)));\n  }, [cart]);\n\n  const addToCart = (byte) => {\n    const { id, index, owner, price } = byte;\n    const cartItems = [...cart, { id, index, owner, price }];\n    setCart(cartItems);\n  };\n\n  const removeFromCart = (id) => {\n    let updatedCart = [...cart].filter((item) => item.id !== id);\n    setCart(updatedCart);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const transferCartToOwner = async () => {\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      try {\n          if (!byteDetails.index || !byteDetails.size || !byteDetails.price) return\n          await API.graphql(graphqlOperation(createByte, { input: byteDetails }))\n          setByteDetails({ index: \"\", size: \"\", price: \"\" })\n      } catch (err) {\n          console.log('error creating todo:', err)\n      }\n  }\n  handleSubmit();\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, total, addToCart, removeFromCart, clearCart, transferCartToOwner }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport { CartProvider, CartContext };"]},"metadata":{},"sourceType":"module"}