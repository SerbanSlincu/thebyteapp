{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/serban/Desktop/bytes/src/context/user.js\";\nimport React from \"react\";\nimport Auth from '@aws-amplify/auth';\nconst UserContext = /*#__PURE__*/React.createContext();\n\nconst UserProvider = async ({\n  children\n}) => {\n  var email = \"\";\n\n  const fetchUserEmail = async () => {\n    await Auth.currentAuthenticatedUser().then(user => {\n      email = user.attributes.email;\n    });\n  };\n\n  const getUserEmail = () => email;\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      getUserEmail,\n      fetchUserEmail\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserProvider;\nexport { UserContext, UserProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/home/serban/Desktop/bytes/src/context/user.js"],"names":["React","Auth","UserContext","createContext","UserProvider","children","email","fetchUserEmail","currentAuthenticatedUser","then","user","attributes","getUserEmail"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,MAAMC,YAAY,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAwB;AAC3C,MAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMN,IAAI,CAACO,wBAAL,GAAgCC,IAAhC,CAAsCC,IAAD,IAAU;AACjDJ,MAAAA,KAAK,GAAGI,IAAI,CAACC,UAAL,CAAgBL,KAAxB;AACH,KAFK,CAAN;AAGD,GAJD;;AAMA,QAAMM,YAAY,GAAG,MAAMN,KAA3B;;AAEE,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAF;AAAgBL,MAAAA;AAAhB,KAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;KAAMD,Y;AAkBN,SAASF,WAAT,EAAsBE,YAAtB","sourcesContent":["import React from \"react\";\nimport Auth from '@aws-amplify/auth';\n\nconst UserContext = React.createContext();\n\nconst UserProvider = async ({ children }) => {\n  var email = \"\";\n  \n  const fetchUserEmail = async () => {\n    await Auth.currentAuthenticatedUser().then((user) => {\n        email = user.attributes.email;\n    });\n  };\n\n  const getUserEmail = () => email;\n\n    return (\n        <UserContext.Provider value={{ getUserEmail, fetchUserEmail }}>\n          {children}\n        </UserContext.Provider>\n    );\n}\n\nexport { UserContext, UserProvider };"]},"metadata":{},"sourceType":"module"}